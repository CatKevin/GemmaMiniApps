ext.kotlin_version = '2.0.21'

buildscript {
    repositories {
        maven {url 'https://maven.aliyun.com/repository/public'}
        maven {url 'https://maven.aliyun.com/repository/google'}
        maven {url 'https://maven.aliyun.com/repository/gradle-plugin'}
        maven {url 'https://maven.aliyun.com/repository/central'}
        maven {url 'https://mirrors.huaweicloud.com/repository/maven'}
        maven {url 'https://mirrors.163.com/maven/repository/maven-public'}
        maven {url 'https://jitpack.io'}
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.0'
    }
}

allprojects {
    repositories {
        maven {url 'https://maven.aliyun.com/repository/public'}
        maven {url 'https://maven.aliyun.com/repository/google'}
        maven {url 'https://maven.aliyun.com/repository/gradle-plugin'}
        maven {url 'https://maven.aliyun.com/repository/central'}
        maven {url 'https://mirrors.huaweicloud.com/repository/maven'}
        maven {url 'https://mirrors.163.com/maven/repository/maven-public'}
        maven {url 'https://jitpack.io'}
    }
}

rootProject.buildDir = "../build"
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    beforeEvaluate { project ->
        if (project.hasProperty("buildscript") && project.buildscript.hasProperty("repositories")) {
            project.buildscript.repositories {
                maven {url 'https://maven.aliyun.com/repository/public'}
                maven {url 'https://maven.aliyun.com/repository/google'}
                maven {url 'https://maven.aliyun.com/repository/gradle-plugin'}
                maven {url 'https://maven.aliyun.com/repository/central'}
                maven {url 'https://mirrors.huaweicloud.com/repository/maven'}
                maven {url 'https://mirrors.163.com/maven/repository/maven-public'}
                maven {url 'https://jitpack.io'}
            }
        }
    }

    beforeEvaluate { project ->
        if (project.hasProperty("allprojects") && project.allprojects.hasProperty("repositories")) {
            project.allprojects.repositories {
                maven {url 'https://maven.aliyun.com/repository/public'}
                maven {url 'https://maven.aliyun.com/repository/google'}
                maven {url 'https://maven.aliyun.com/repository/gradle-plugin'}
                maven {url 'https://maven.aliyun.com/repository/central'}
                maven {url 'https://mirrors.huaweicloud.com/repository/maven'}
                maven {url 'https://mirrors.163.com/maven/repository/maven-public'}
                maven {url 'https://jitpack.io'}
            }
        }
    }

    afterEvaluate { project ->
        if (project.plugins.hasPlugin("com.android.application") ||
                project.plugins.hasPlugin("com.android.library")) {
            project.android {
                if (namespace == null) {
                    namespace project.group
                }
                compileSdkVersion 35
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }
            }
        }
    }

    afterEvaluate { project ->
        if (project.hasProperty("kotlin")) {
            project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
                kotlinOptions {
                    jvmTarget = "17"
                }
            }
        }
    }
}
subprojects {
    project.evaluationDependsOn(":app")
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
